/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Velha;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author matheus
 */
public class Interface extends javax.swing.JFrame {

    /**
     * Creates new form Interface
     */
    String[][] tabuleiro = {{"t", "t", "t"}, {"t", "t", "t"}, {"t", "t", "t"}};
    int restam;
    int dificuldade;
    int turno;

    public Interface(int dificuldade, int turno) {
        this.dificuldade = dificuldade;
        this.turno = turno;
        this.restam = 9;

        this.setLocationRelativeTo(null);
        initComponents();
        centralizarComponente();
        if (this.turno == 0) {
            cpuJoga();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    public void centralizarComponente() {
        Dimension ds = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension dw = getSize();
        setLocation((ds.width - dw.width) / 2, (ds.height - dw.height) / 2);
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_00 = new javax.swing.JButton();
        btn_01 = new javax.swing.JButton();
        btn_02 = new javax.swing.JButton();
        btn_10 = new javax.swing.JButton();
        btn_11 = new javax.swing.JButton();
        btn_12 = new javax.swing.JButton();
        btn_20 = new javax.swing.JButton();
        btn_21 = new javax.swing.JButton();
        btn_22 = new javax.swing.JButton();
        btn_reset = new javax.swing.JButton();
        reiniciar = new javax.swing.JButton();
        sair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        btn_00.setFont(new java.awt.Font("Liberation Sans", 1, 80)); // NOI18N
        btn_00.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_00ActionPerformed(evt);
            }
        });

        btn_01.setFont(new java.awt.Font("Liberation Sans", 1, 80)); // NOI18N
        btn_01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_01ActionPerformed(evt);
            }
        });

        btn_02.setFont(new java.awt.Font("Liberation Sans", 1, 80)); // NOI18N
        btn_02.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_02ActionPerformed(evt);
            }
        });

        btn_10.setFont(new java.awt.Font("Liberation Sans", 1, 80)); // NOI18N
        btn_10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_10ActionPerformed(evt);
            }
        });

        btn_11.setFont(new java.awt.Font("Liberation Sans", 1, 80)); // NOI18N
        btn_11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_11ActionPerformed(evt);
            }
        });

        btn_12.setFont(new java.awt.Font("Liberation Sans", 1, 80)); // NOI18N
        btn_12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_12ActionPerformed(evt);
            }
        });

        btn_20.setFont(new java.awt.Font("Liberation Sans", 1, 80)); // NOI18N
        btn_20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_20ActionPerformed(evt);
            }
        });

        btn_21.setFont(new java.awt.Font("Liberation Sans", 1, 80)); // NOI18N
        btn_21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_21ActionPerformed(evt);
            }
        });

        btn_22.setFont(new java.awt.Font("Liberation Sans", 1, 80)); // NOI18N
        btn_22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_22ActionPerformed(evt);
            }
        });

        btn_reset.setBackground(new java.awt.Color(204, 255, 255));
        btn_reset.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btn_reset.setText("Voltar Ã  tela inicial");
        btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetActionPerformed(evt);
            }
        });

        reiniciar.setBackground(new java.awt.Color(204, 255, 255));
        reiniciar.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        reiniciar.setText("Reiniciar");
        reiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reiniciarActionPerformed(evt);
            }
        });

        sair.setBackground(new java.awt.Color(204, 255, 255));
        sair.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        sair.setText("Sair");
        sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_20, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_21, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_22, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btn_00, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_01, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_02, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btn_10, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_11, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_12, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btn_reset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(reiniciar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(sair, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)))))
                .addGap(71, 71, 71))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_00, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_01, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_02, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_10, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_11, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_12, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(reiniciar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_reset)
                        .addGap(31, 31, 31)
                        .addComponent(sair)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_20, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_21, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_22, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(212, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_00ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_00ActionPerformed
        // TODO add your handling code here:
        if (this.tabuleiro[0][0].equals("t")) {
            this.tabuleiro[0][0] = "O";
            this.restam--;
            btn_00.setText("O");
            if (endGame()) {
                JOptionPane.showMessageDialog(null, "VocÃª ganhou!\nParabÃ©ns");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);

            }
            else if (this.restam == 0) {
                JOptionPane.showMessageDialog(null, "Deu velha!\nJogo empatado.");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }
            
            cpuJoga();
            
            if(endGame()){
                JOptionPane.showMessageDialog(null, "VocÃª perdeu :(");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }
            else if (this.restam == 0) {
                JOptionPane.showMessageDialog(null, "Deu velha!\nJogo empatado.");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }

        }
    }//GEN-LAST:event_btn_00ActionPerformed

    private void btn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resetActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new TelaInicial().setVisible(true);
    }//GEN-LAST:event_btn_resetActionPerformed

    private void btn_01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_01ActionPerformed
        // TODO add your handling code here:
        if (this.tabuleiro[0][1].equals("t")) {
            this.tabuleiro[0][1] = "O";
            this.restam--;
            btn_01.setText("O");
            if (endGame()) {
                JOptionPane.showMessageDialog(null, "VocÃª ganhou!\nParabÃ©ns");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);

            }
            else if (this.restam == 0) {
                JOptionPane.showMessageDialog(null, "Deu velha!\nJogo empatado.");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }
            
            cpuJoga();
            
            if(endGame()){
                JOptionPane.showMessageDialog(null, "VocÃª perdeu :(");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }
            else if (this.restam == 0) {
                JOptionPane.showMessageDialog(null, "Deu velha!\nJogo empatado.");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }

        }
    }//GEN-LAST:event_btn_01ActionPerformed

    private void btn_02ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_02ActionPerformed
        // TODO add your handling code here:
        if (this.tabuleiro[0][2].equals("t")) {
            this.tabuleiro[0][2] = "O";
            this.restam--;
            btn_02.setText("O");
            if (endGame()) {
                JOptionPane.showMessageDialog(null, "VocÃª ganhou!\nParabÃ©ns");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);

            }
            else if (this.restam == 0) {
                JOptionPane.showMessageDialog(null, "Deu velha!\nJogo empatado.");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }
            
            cpuJoga();
            
            if(endGame()){
                JOptionPane.showMessageDialog(null, "VocÃª perdeu :(");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }
            else if (this.restam == 0) {
                JOptionPane.showMessageDialog(null, "Deu velha!\nJogo empatado.");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }

        }
    }//GEN-LAST:event_btn_02ActionPerformed

    private void btn_10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_10ActionPerformed
        // TODO add your handling code here:
        if (this.tabuleiro[1][0].equals("t")) {
            this.tabuleiro[1][0] = "O";
            this.restam--;
            btn_10.setText("O");
            if (endGame()) {
                JOptionPane.showMessageDialog(null, "VocÃª ganhou!\nParabÃ©ns");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);

            }
            else if (this.restam == 0) {
                JOptionPane.showMessageDialog(null, "Deu velha!\nJogo empatado.");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }
            
            cpuJoga();
            
            if(endGame()){
                JOptionPane.showMessageDialog(null, "VocÃª perdeu :(");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }
            else if (this.restam == 0) {
                JOptionPane.showMessageDialog(null, "Deu velha!\nJogo empatado.");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }

        }
    }//GEN-LAST:event_btn_10ActionPerformed

    private void btn_11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_11ActionPerformed
        // TODO add your handling code here:
        if (this.tabuleiro[1][1].equals("t")) {
            this.tabuleiro[1][1] = "O";
            this.restam--;
            btn_11.setText("O");
            if (endGame()) {
                JOptionPane.showMessageDialog(null, "VocÃª ganhou!\nParabÃ©ns");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);

            }
            else if (this.restam == 0) {
                JOptionPane.showMessageDialog(null, "Deu velha!\nJogo empatado.");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }
            
            cpuJoga();
            
            if(endGame()){
                JOptionPane.showMessageDialog(null, "VocÃª perdeu :(");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }
            else if (this.restam == 0) {
                JOptionPane.showMessageDialog(null, "Deu velha!\nJogo empatado.");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }

        }
    }//GEN-LAST:event_btn_11ActionPerformed

    private void btn_12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_12ActionPerformed
        // TODO add your handling code here:
        if (this.tabuleiro[1][2].equals("t")) {
            this.tabuleiro[1][2] = "O";
            this.restam--;
            btn_12.setText("O");
            if (endGame()) {
                JOptionPane.showMessageDialog(null, "VocÃª ganhou!\nParabÃ©ns");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);

            }
            else if (this.restam == 0) {
                JOptionPane.showMessageDialog(null, "Deu velha!\nJogo empatado.");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }
            
            cpuJoga();
            
            if(endGame()){
                JOptionPane.showMessageDialog(null, "VocÃª perdeu :(");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }
            else if (this.restam == 0) {
                JOptionPane.showMessageDialog(null, "Deu velha!\nJogo empatado.");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }

        }
    }//GEN-LAST:event_btn_12ActionPerformed

    private void btn_20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_20ActionPerformed
        // TODO add your handling code here:
        if (this.tabuleiro[2][0].equals("t")) {
            this.tabuleiro[2][0] = "O";
            this.restam--;
            btn_20.setText("O");
            if (endGame()) {
                JOptionPane.showMessageDialog(null, "VocÃª ganhou!\nParabÃ©ns");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);

            }
            else if (this.restam == 0) {
                JOptionPane.showMessageDialog(null, "Deu velha!\nJogo empatado.");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }
            
            cpuJoga();
            
            if(endGame()){
                JOptionPane.showMessageDialog(null, "VocÃª perdeu :(");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }
            else if (this.restam == 0) {
                JOptionPane.showMessageDialog(null, "Deu velha!\nJogo empatado.");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }

        }
    }//GEN-LAST:event_btn_20ActionPerformed

    private void btn_21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_21ActionPerformed
        // TODO add your handling code here:
        if (this.tabuleiro[2][1].equals("t")) {
            this.tabuleiro[2][1] = "O";
            this.restam--;
            btn_21.setText("O");
            if (endGame()) {
                JOptionPane.showMessageDialog(null, "VocÃª ganhou!\nParabÃ©ns");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);

            }
            else if (this.restam == 0) {
                JOptionPane.showMessageDialog(null, "Deu velha!\nJogo empatado.");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }
            
            cpuJoga();
            
            if(endGame()){
                JOptionPane.showMessageDialog(null, "VocÃª perdeu :(");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }
            else if (this.restam == 0) {
                JOptionPane.showMessageDialog(null, "Deu velha!\nJogo empatado.");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }

        }
    }//GEN-LAST:event_btn_21ActionPerformed

    private void btn_22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_22ActionPerformed
        // TODO add your handling code here:
        if (this.tabuleiro[2][2].equals("t")) {
            this.tabuleiro[2][2] = "O";
            this.restam--;
            btn_22.setText("O");
            if (endGame()) {
                JOptionPane.showMessageDialog(null, "VocÃª ganhou!\nParabÃ©ns");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);

            }
            else if (this.restam == 0) {
                JOptionPane.showMessageDialog(null, "Deu velha!\nJogo empatado.");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }
            
            cpuJoga();
            
            if(endGame()){
                JOptionPane.showMessageDialog(null, "VocÃª perdeu :(");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }
            else if (this.restam == 0) {
                JOptionPane.showMessageDialog(null, "Deu velha!\nJogo empatado.");
                this.dispose();
                new Interface(this.dificuldade, this.turno).setVisible(true);
            }

        }
    }//GEN-LAST:event_btn_22ActionPerformed

    private void reiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reiniciarActionPerformed
        // TODO add your handling code here:
        reiniciar();
    }//GEN-LAST:event_reiniciarActionPerformed

    private void sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_sairActionPerformed
    public void jogadorJoga(int i, int j) {
        this.tabuleiro[i][j] = "O"; //jogada feita no backend
        //jogada feita no front (class Interface)

    }

    public void cpuJoga() {
        //ArrayList<Matriz> arvorePossibilidades = new ArrayList<>();
        ArrayList<Integer> possiveisJogadas = new ArrayList<>();
        Random gerador = new Random();
        int noMaior = 0;

        Matriz noRaiz = new Matriz(this.tabuleiro, 0);

        if (this.dificuldade < this.restam) {
            noRaiz.preenche(this.dificuldade); //profundidade mÃ¡xima que serÃ¡ descida na Ã¡rvore de possibilidade, quanto mais fundo, mais possibilidades a IA levarÃ¡ em conta.
        } else {
            noRaiz.preenche(this.restam);
        }
        possiveisJogadas.clear();
        for (int i = 0; i < noRaiz.arvorePossibilidades.size(); i++) {
            if (noRaiz.arvorePossibilidades.get(i).minMaxValue > noRaiz.arvorePossibilidades.get(noMaior).minMaxValue) {

                possiveisJogadas.clear();
                possiveisJogadas.add(i);
                noMaior = i;
            } else if (noRaiz.arvorePossibilidades.get(i).minMaxValue == noRaiz.arvorePossibilidades.get(noMaior).minMaxValue) {
                possiveisJogadas.add(i);
            }

        }
        
        noMaior = possiveisJogadas.get((int) (Math.random() * (possiveisJogadas.size())));

        this.tabuleiro[noRaiz.arvorePossibilidades.get(noMaior).i][noRaiz.arvorePossibilidades.get(noMaior).j] = "X";
        this.restam--;
        if (noRaiz.arvorePossibilidades.get(noMaior).i == 0) {
            if (noRaiz.arvorePossibilidades.get(noMaior).j == 0) {
                btn_00.setText("X");
            }
        }
        if (noRaiz.arvorePossibilidades.get(noMaior).i == 0) {
            if (noRaiz.arvorePossibilidades.get(noMaior).j == 1) {
                btn_01.setText("X");
            }
        }
        if (noRaiz.arvorePossibilidades.get(noMaior).i == 0) {
            if (noRaiz.arvorePossibilidades.get(noMaior).j == 2) {
                btn_02.setText("X");
            }
        }
        if (noRaiz.arvorePossibilidades.get(noMaior).i == 1) {
            if (noRaiz.arvorePossibilidades.get(noMaior).j == 0) {
                btn_10.setText("X");
            }
        }
        if (noRaiz.arvorePossibilidades.get(noMaior).i == 1) {
            if (noRaiz.arvorePossibilidades.get(noMaior).j == 1) {
                btn_11.setText("X");
            }
        }
        if (noRaiz.arvorePossibilidades.get(noMaior).i == 1) {
            if (noRaiz.arvorePossibilidades.get(noMaior).j == 2) {
                btn_12.setText("X");
            }
        }
        if (noRaiz.arvorePossibilidades.get(noMaior).i == 2) {
            if (noRaiz.arvorePossibilidades.get(noMaior).j == 0) {
                btn_20.setText("X");
            }
        }
        if (noRaiz.arvorePossibilidades.get(noMaior).i == 2) {
            if (noRaiz.arvorePossibilidades.get(noMaior).j == 1) {
                btn_21.setText("X");
            }
        }
        if (noRaiz.arvorePossibilidades.get(noMaior).i == 2) {
            if (noRaiz.arvorePossibilidades.get(noMaior).j == 2) {
                btn_22.setText("X");
            }
        }

        //jogada feita no front (class Interface)
    }

    public boolean endGame() {
        if (this.tabuleiro[0][0].equals(this.tabuleiro[1][1])) {
            if (this.tabuleiro[0][0].equals(this.tabuleiro[2][2])) {
                if (this.tabuleiro[0][0].equals("X")) {
                    
                    return true;
                }
            }
        }

        if (this.tabuleiro[0][2].equals(this.tabuleiro[1][1])) {
            if (this.tabuleiro[0][2].equals(this.tabuleiro[2][0])) {
                if (this.tabuleiro[0][2].equals("X")) {
                    
                    return true;
                }
            }
        }

        if (this.tabuleiro[0][0].equals(this.tabuleiro[1][0])) {
            if (this.tabuleiro[0][0].equals(this.tabuleiro[2][0])) {
                if (this.tabuleiro[0][0].equals("X")) {
                    
                    return true;
                }
            }
        }

        if (this.tabuleiro[0][1].equals(this.tabuleiro[1][1])) {
            if (this.tabuleiro[0][1].equals(this.tabuleiro[2][1])) {
                if (this.tabuleiro[0][1].equals("X")) {
                    
                    return true;
                }
            }
        }

        if (this.tabuleiro[0][2].equals(this.tabuleiro[1][2])) {
            if (this.tabuleiro[0][2].equals(this.tabuleiro[2][2])) {
                if (this.tabuleiro[0][2].equals("X")) {
                    
                    return true;
                }
            }
        }

        if (this.tabuleiro[0][0].equals(this.tabuleiro[0][1])) {
            if (this.tabuleiro[0][0].equals(this.tabuleiro[0][2])) {
                if (this.tabuleiro[0][0].equals("X")) {
                    
                    return true;
                }
            }
        }

        if (this.tabuleiro[1][0].equals(this.tabuleiro[1][1])) {
            if (this.tabuleiro[1][0].equals(this.tabuleiro[1][2])) {
                if (this.tabuleiro[1][0].equals("X")) {
                    
                    return true;
                }
            }
        }

        if (this.tabuleiro[2][0].equals(this.tabuleiro[2][1])) {
            if (this.tabuleiro[2][0].equals(this.tabuleiro[2][2])) {
                if (this.tabuleiro[2][0].equals("X")) {
                    
                    return true;
                }
            }
        }

        if (this.tabuleiro[0][0].equals(this.tabuleiro[1][1])) {
            if (this.tabuleiro[0][0].equals(this.tabuleiro[2][2])) {
                if (this.tabuleiro[0][0].equals("O")) {
                    
                    return true;
                }
            }
        }

        if (this.tabuleiro[0][2].equals(this.tabuleiro[1][1])) {
            if (this.tabuleiro[0][2].equals(this.tabuleiro[2][0])) {
                if (this.tabuleiro[0][2].equals("O")) {
                    
                    return true;
                }
            }
        }

        if (this.tabuleiro[0][0].equals(this.tabuleiro[1][0])) {
            if (this.tabuleiro[0][0].equals(this.tabuleiro[2][0])) {
                if (this.tabuleiro[0][0].equals("O")) {
                    
                    return true;
                }
            }
        }

        if (this.tabuleiro[0][1].equals(this.tabuleiro[1][1])) {
            if (this.tabuleiro[0][1].equals(this.tabuleiro[2][1])) {
                if (this.tabuleiro[0][1].equals("O")) {
                    
                    return true;
                }
            }
        }

        if (this.tabuleiro[0][2].equals(this.tabuleiro[1][2])) {
            if (this.tabuleiro[0][2].equals(this.tabuleiro[2][2])) {
                if (this.tabuleiro[0][2].equals("O")) {
                    
                    return true;
                }
            }
        }

        if (this.tabuleiro[0][0].equals(this.tabuleiro[0][1])) {
            if (this.tabuleiro[0][0].equals(this.tabuleiro[0][2])) {
                if (this.tabuleiro[0][0].equals("O")) {
                    
                    return true;
                }
            }
        }

        if (this.tabuleiro[1][0].equals(this.tabuleiro[1][1])) {
            if (this.tabuleiro[1][0].equals(this.tabuleiro[1][2])) {
                if (this.tabuleiro[1][0].equals("O")) {
                    
                    return true;
                }
            }
        }

        if (this.tabuleiro[2][0].equals(this.tabuleiro[2][1])) {
            if (this.tabuleiro[2][0].equals(this.tabuleiro[2][2])) {
                if (this.tabuleiro[2][0].equals("O")) {
                    
                    return true;

                }
            }
        }
        return false;

    }

    public void reiniciar() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                this.tabuleiro[i][j] = "t";
            }
        }

        btn_00.setText("");
        btn_01.setText("");
        btn_02.setText("");
        btn_10.setText("");
        btn_11.setText("");
        btn_12.setText("");
        btn_20.setText("");
        btn_21.setText("");
        btn_22.setText("");
        this.restam = 9;
        if(this.turno==0)
            cpuJoga();
        

    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Interface().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_00;
    private javax.swing.JButton btn_01;
    private javax.swing.JButton btn_02;
    private javax.swing.JButton btn_10;
    private javax.swing.JButton btn_11;
    private javax.swing.JButton btn_12;
    private javax.swing.JButton btn_20;
    private javax.swing.JButton btn_21;
    private javax.swing.JButton btn_22;
    private javax.swing.JButton btn_reset;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton reiniciar;
    private javax.swing.JButton sair;
    // End of variables declaration//GEN-END:variables
}
